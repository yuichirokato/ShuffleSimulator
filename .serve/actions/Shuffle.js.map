{"version":3,"sources":["actions/Shuffle.js"],"names":[],"mappings":"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","file":"actions/Shuffle.js","sourcesContent":["import SettingsStore from '../store/SettingsStore';\nimport FileWriter from '../utils/FileWriter';\n\nconst flatten = list => [].concat.apply([], list);\n\nlet middleIndex = 0;\nlet gloabalIndex = 0;\nlet maxTimes = 0;\nlet localMaxTimes = 0;\nlet itemResults = [];\nlet localResults = [];\nlet results = [];\nlet isDisplayProcess = SettingsStore.getEachDisplay();\n\nclass Shuffle {\n\n  constructor() {\n    // Nop\n  }\n\n  shuffleStart(conditions, times, deck) {\n    let _deck = deck;\n\n    if (times <= 0) {\n      let string = results.reduce((a, b) => a + b, '');\n      return { deck: result, string: string };\n    }\n\n    if (deck.length === 0) {\n      _deck = this._createDeck();\n      maxTimes = times;\n    }\n\n    gloabalIndex = maxTimes - times;\n    let result = this._localShuffle(conditions, _deck);\n\n    results[results.length] = localResults.join(',');\n    localResults = [];\n    return this.shuffleStart(conditions, times - 1, result);\n  }\n\n  _localShuffle(conditions, deck) {\n    let _deck = deck;\n    let eachDisplay = SettingsStore.getEachDisplay();\n\n    [...Array(conditions.length).keys()].forEach(index => {\n      let condition = conditions[index];\n      console.log(\"type: \" + JSON.stringify(condition));\n      middleIndex = index;\n      _deck = this._shuffleRouter(condition, _deck);\n      // console.log(\"_deck: \" + JSON.stringify(_deck));\n      let csv = FileWriter.arrayToCsvString(_deck);\n      let template = FileWriter.createSettingsTemplate(condition);\n\n      localResults[localResults.length] = template + csv;\n    });\n\n    return _deck;\n  }\n\n  _shuffleRouter(condition, deck) {\n\n    console.log(\"condition: \" + JSON.stringify(condition));\n\n    let type = condition.shuffleType;\n\n    if (type === 'cut') {\n      let fromRange = condition.fromRange;\n      let toRange = condition.toRange;\n      let isRandom = condition.startIsRandom;\n      let times = condition.shuffleTimes;\n      return this._cutShuffle(fromRange, toRange, isRandom, times, deck)\n    }\n\n    if (type === 'hindu') {\n      let fromRange = condition.fromRange;\n      let toRange = condition.toRange;\n      let endFromRange = condition.endFromRange;\n      let endToRange = condition.endToRange;\n      let isRandom = condition.startIsRandom;\n      let endIsRandom = condition.endIsRandom;\n      let times = condition.shuffleTimes;\n      return this._hinduShuffle(fromRange, toRange, endFromRange, endToRange, isRandom, endIsRandom, times, deck);\n    }\n\n    if (type === 'faro') {\n      let times = condition.shuffleTimes;\n      return this._faroShuffle(times, deck);\n    }\n\n    if (type === 'deal') {\n      let fromRange = condition.fromRange;\n      let toRange = condition.toRange;\n      let isRandom = condition.startIsRandom;\n      let times = condition.shuffleTimes;\n      return this._dealShuffle(fromRange, toRange, isRandom, times, deck);\n    }\n  }\n\n  _cutShuffle(fromNum, toNum, isRandom, times, deck) {\n    if (times <= 0) {\n      itemResults = [];\n      return result;\n    }\n\n    let endPoint = isRandom ? this._createRandom() : this._createRandom(fromNum, toNum);\n    let newDeck = deck.slice(0, endPoint);\n    let result = deck.slice(endPoint).concat(newDeck);\n\n    if (itemResults.length <= 0) {\n      localMaxTimes = times;\n    }\n\n    let index = localMaxTimes - times;\n\n    if (isDisplayProcess) {\n      console.log(\"cut isDisplay True!\");\n      let suffix = \"cut-\" + gloabalIndex + \"-\" + middleIndex + \"-\" + index;\n      let condition = { shuffleType: \"cut\", fromRange: fromNum, toRange: toNum, shuffleTimes: localMaxTimes };\n      FileWriter.writeProcess(result, condition, suffix);\n    }\n\n    itemResults[itemResults.length] = index;\n\n    return this._cutShuffle(fromNum, toNum, isRandom, times - 1, result);\n  }\n\n  _hinduShuffle(startFrom, startTo, endFrom, endTo, isRandom, endIsRandom, times, deck) {\n    if (times <= 0) {\n      itemResults = [];\n\t\t  return deck;\n\t  }\n\n    let start = isRandom ? this._createRandom() : this._createRandom(startFrom, startTo);\n\t  let end = endIsRandom ? this._createRandom() : this._createRandom(endFrom, endTo);\n    let isError = start > end ? 'error!' : 'no error!';\n    // console.log(\"endTo: \" + endTo);\n    // console.log(\"start: \" + start);\n    // console.log(\"end: \" + end);\n    // console.log(\"times: \" + times);\n    // console.log(\"start > end: \" + isError);\n\n\t  if (start > end || start < startFrom || start > startTo || end < endFrom || end > endTo) {\n      console.log(\"やり直し！\");\n\t\t  return this._hinduShuffle(startFrom, startTo, endFrom, endTo, isRandom, endIsRandom, times, deck);\n\t  }\n\n    if (itemResults.length <= 0) {\n      localMaxTimes = times;\n    }\n\n    let index = localMaxTimes - times;\n\t  let middleDeck = deck.slice(start - 1, end);\n\t  let bottomDeck = deck.slice(end);\n\t  let topDeck = deck.slice(0, start - 1);\n\n    // console.log(\"middle: \" + JSON.stringify(middleDeck));\n    // console.log(\"top: \" + JSON.stringify(topDeck));\n    // console.log(\"bottom: \" + JSON.stringify(bottomDeck));\n\n\t  let result = flatten([middleDeck, topDeck, bottomDeck]);\n\n    // console.log(\"hindu result: \" + JSON.stringify(result));\n\n    if (isDisplayProcess) {\n      let suffix = \"hindu-\" + gloabalIndex + \"-\" + middleIndex + \"-\" + index;\n      let condition = { shuffleType: \"hindu\", fromRange: startFrom, toRange: startTo, endFromRange: endFrom, endToRange: endTo, shuffleTimes: localMaxTimes };\n      FileWriter.writeProcess(result, condition, suffix);\n    }\n\n    itemResults[itemResults.length] = index;\n\n\t  return this._hinduShuffle(startFrom, startTo, endFrom, endTo, isRandom, endIsRandom, times - 1, result);\n  }\n\n  _faroShuffle(times, deck) {\n    if (times <= 0) {\n      itemResults = [];\n      return result;\n    }\n\n    let endPoint = deck.length / 2;\n\t  let arrayRight = deck.slice(0, endPoint);\n\t  let arrayLeft = deck.slice(endPoint);\n\t  let result = [];\n\t  let rightCount = 0;\n\t  let leftCount = 0;\n\n    if (itemResults.length <= 0) {\n      localMaxTimes = times;\n    }\n\n\t  for (let i = 1; i < deck.length + 1; i++) {\n\t\t  if (i === 1 || i % 2 !== 0) {\n\t\t\t  result[i - 1] = arrayLeft[leftCount];\n\t\t\t  leftCount++;\n\t\t  } else {\n\t\t\t  result[i - 1] = arrayRight[rightCount];\n\t\t\t  rightCount++;\n\t\t  }\n\t  }\n\n    let index = localMaxTimes - times;\n    if (isDisplayProcess) {\n      console.log(\"faro isDisplay True!\");\n      let suffix = \"faro-\" + gloabalIndex + \"-\" + middleIndex + \"-\" + index;\n      let condition = { shuffleType: \"faro\", shuffleTimes: localMaxTimes };\n      FileWriter.writeProcess(result, condition, suffix);\n    }\n\n    itemResults[itemResults.length] = index;\n\n\t  return this._faroShuffle(times - 1, result);\n  }\n\n  _dealShuffle(fromNum, toNum, times, deck) {\n    if (times <= 0) {\n      itemResults = [];\n      return flatten(result);\n    }\n\n    let num = _createSubDeckNumber(fromNum, toNum);\n\t  let decks = _createEmptyDecks(num);\n\t  let result = [];\n\t  let surplus = deck.length % num;\n\n    if (itemResults.length <= 0) {\n      localMaxTimes = times;\n    }\n\n\t  if (num === 1) {\n\t\t  deck.reverse();\n\n      if (isDisplayProcess) {\n        let suffix = \"deal-\" + gloabalIndex + \"-\" + middleIndex + \"-\" + index;\n        let condition = { shuffleType: \"deal\", fromRange: fromNum, toRange: toNum, shuffleTimes: localMaxTimes };\n        FileWriter.writeProcess(deck, condition, suffix);\n      }\n\n      itemResults[itemResults.length] = index;\n\n\t\t  return this._dealShuffle(fromNum, toNum, times - 1, deck);\n\t  }\n\n    result = [...Array(num).keys()].map(index => {\n      return this._getSubDeckIndex(index, num).map(i => deck[i]);\n    });\n\n\t  if (surplus) {\n\t\t  let surplusIndex = deck.length - surplus;\n      [...Array(surplus).keys()].forEach(index => {\n        let subDeckIndex = result[index].length;\n        result[index][subDeckIndex] = deck[surplusIndex];\n        surplusIndex++;\n      });\n\t  }\n\n    if (isDisplayProcess) {\n      let suffix = \"deal-\" + gloabalIndex + \"-\" + middleIndex + \"-\" + index;\n      let condition = { shuffleType: \"deal\", fromRange: fromNum, toRange: toNum, shuffleTimes: localMaxTimes };\n      FileWriter.writeProcess(flatten(result), condition, suffix);\n    }\n\n    itemResults[itemResults.length] = index;\n\n\t  return this._dealShuffle(fromNum, toNum, times - 1, flatten(result));\n  }\n\n  _createDeck() {\n    let sutes = ['spade', 'club', 'heart', 'dia'];\n    let result = flatten(\n      sutes.map(sute => {\n        return Array.from(Array(13).keys()).map(index => {\n          return { sute: sute, number: index + 1 }\n        });\n      })\n    );\n\n    return result;\n  }\n\n  _createRandom(fromNum, toNum) {\n    console.log(\"fromNum: \" + fromNum);\n    console.log(\"toNum: \" + toNum);\n    if (fromNum === undefined || toNum === undefined) {\n      let result = Math.floor(Math.random() * (52 - 1) + 1);\n      console.log(\"result: \" + result);\n      return result;\n    }\n\n    let result = Math.floor(Math.random() * (toNum - fromNum) + fromNum);\n\n    return result;\n  }\n\n  _createEmptyDecks(num) {\n    return [...Array(num).keys()].map(index => []);\n  }\n\n  _getSubDeckIndex(fromNum, byNum) {\n    let maxIteration = deck.length / byNum;\n    return [...Array(maxIteration + 1).keys()].map(i => fromNum + byNum * i);\n  }\n\n  _createSubDeckNumber(fromNum, toNum) {\n    if (from === 'undefined' || to === 'undefined') {\n\t\t  return Math.random() * (8 - 1) + 1;\n\t  }\n\n\t  return Math.random() * (to - fromNum) + fromNum;\n  }\n}\n\nexport default new Shuffle();\n"],"sourceRoot":"/source/"}