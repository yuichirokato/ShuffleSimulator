{"version":3,"sources":["store/ShuffleItemStore.js"],"names":[],"mappings":"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","file":"store/ShuffleItemStore.js","sourcesContent":["import { EventEmitter } from 'events';\nimport AppDispatcher from '../dispatcher/AppDispatcher';\n\nconst CHANGE_EVENT = 'change';\nlet conditions = [];\nlet isEnabledShuffleItems = false;\n\nclass ShuffleItemStore extends EventEmitter {\n  constructor() {\n    super();\n    this.dispatchToken = AppDispatcher.register( action => {\n      switch (action.type) {\n        case 'add':\n          this._addCondition(action);\n          break;\n\n        case 'remove':\n          this._removeCondition(action);\n          break;\n\n        default:\n          break;\n      }\n    });\n  }\n\n  emitChange() {\n    this.emit(CHANGE_EVENT);\n  }\n\n  addChangeListener(callback) {\n    this.on(CHANGE_EVENT, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(CHANGE_EVENT, callback);\n  }\n\n  getEnabledShuffleItems() {\n    return isEnabledShuffleItems;\n  }\n\n  getConditions() {\n    return conditions;\n  }\n\n  _addCondition(action) {\n    let itemId = action.itemId;\n    conditions[itemId] = action.condition;\n\n    let enabled = conditions.map(condition => {\n      return this._validateCheck(condition)\n    }).reduce((a, b) => a && b, true);\n    isEnabledShuffleItems = enabled;\n\n    this.emitChange();\n  }\n\n  _removeCondition(action) {\n    conditions.splice(action.itemId, 1);\n\n    let enabled = conditions.map(condition => {\n      return this._validateCheck(condition)\n    }).reduce((a, b) => a && b, true);\n    isEnabledShuffleItems = enabled;\n\n    this.emitChange();\n  }\n\n  _validateCheck(condition) {\n\n    console.log(\"validate, condition.type: \" + condition.shuffleType);\n\n    switch (condition.shuffleType) {\n      case 'cut':\n      case 'deal':\n        return this._defaultShuffleCheck(condition);\n        break;\n\n      case 'hindu':\n        return this._hinduShuffleCheck(condition);\n        break;\n\n      case 'faro':\n        return this._faroShuffleCheck(condition);\n        break;\n\n      default:\n        return false;\n    }\n  }\n\n  _defaultShuffleCheck(condition) {\n    let fromRangeValid = condition.fromRange !== -1;\n    let toRangeValid = condition.toRange !== -1;\n    let timesValid = condition.shuffleTimes > 0;\n    let rangeValid = condition.fromRange <= condition.toRange;\n\n    console.log(\"condition.fromRange !== -1: \" + fromRangeValid);\n    console.log(\"condition.toRange !== -1: \" + toRangeValid);\n    console.log(\"condition.shuffleTimes > 0: \" + timesValid);\n    console.log(\"condition.fromRange <= condition.toRange: \" + rangeValid);\n\n    return ((fromRangeValid && toRangeValid && rangeValid) || condition.startIsRandom) &&\n           timesValid;\n  }\n\n  _hinduShuffleCheck(condition) {\n    let first = this._defaultShuffleCheck(condition);\n    let endFromRange = condition.endFromRange;\n    let endToRange = condition.endToRange;\n\n    return (((endFromRange <= endToRange) &&\n           (endFromRange !== -1) &&\n           (endToRange !== -1)) || condition.endIsRandom) &&\n           (first);\n  }\n\n  _faroShuffleCheck(condition) {\n    return condition.shuffleTimes > 0;\n  }\n}\n\nexport default new ShuffleItemStore();\n"],"sourceRoot":"/source/"}