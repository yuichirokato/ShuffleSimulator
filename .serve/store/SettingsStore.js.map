{"version":3,"sources":["store/SettingsStore.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;sBAA6B,QAAQ;;uCACX,6BAA6B;;;;AAEvD,IAAI,gBAAgB,GAAG,KAAK,CAAC;AAC7B,IAAI,aAAa,GAAG,CAAC,CAAC;;IAEhB,aAAa;YAAb,aAAa;;AACN,WADP,aAAa,GACH;0BADV,aAAa;;AAEf,+BAFE,aAAa,6CAEP;;AAER,QAAI,CAAC,aAAa,GAAG,qCAAc,QAAQ,CAAC,UAAA,MAAM,EAAI;AACpD,UAAI,MAAM,CAAC,IAAI,KAAK,sBAAsB,EAAE;AAC1C,wBAAgB,GAAG,MAAM,CAAC,SAAS,CAAC;OACrC;;AAED,UAAI,MAAM,CAAC,IAAI,KAAK,2BAA2B,EAAE;AAC/C,qBAAa,GAAG,MAAM,CAAC,MAAM,CAAC;OAC/B;KACF,CAAC,CAAC;GACJ;;eAbG,aAAa;;WAeH,0BAAG;AACf,aAAO,gBAAgB,CAAC;KACzB;;;WAEe,4BAAG;AACjB,aAAO,aAAa,CAAC;KACtB;;;SArBG,aAAa;;;qBAwBJ,IAAI,aAAa,EAAE","file":"store/SettingsStore.js","sourcesContent":["import { EventEmitter } from 'events';\nimport AppDispatcher from '../dispatcher/AppDispatcher';\n\nlet isDisplayProcess = false;\nlet numberOfCards = 0;\n\nclass SettingsStore extends EventEmitter {\n  constructor() {\n    super();\n\n    this.dispatchToken = AppDispatcher.register(action => {\n      if (action.type === 'updateDisplayProcess') {\n        isDisplayProcess = action.isDisplay;\n      }\n\n      if (action.type === 'updateCustomNumberOfCards') {\n        numberOfCards = action.number;\n      }\n    });\n  }\n\n  getEachDisplay() {\n    return isDisplayProcess;\n  }\n\n  getNumberOfCards() {\n    return numberOfCards;\n  }\n}\n\nexport default new SettingsStore();\n"],"sourceRoot":"/source/"}